-- CONTEST AND EXERCISES CAN BE FOUND AT https://judge.softuni.bg/Contests/326/Databases-MSSQL-Server-Exam-16-October-2016

-------------------------------------1
CREATE TABLE Flights(
	FlightID INT,
	DepartureTime DATETIME NOT NULL,
	ArrivalTime DATETIME NOT NULL,
	[Status] VARCHAR(9) NOT NULL,
	OriginAirportID INT,
	DestinationAirportID INT,
	AirlineID INT,
	CONSTRAINT PK_Flighs_ID PRIMARY KEY(FlightID),
	CONSTRAINT FK_Flights_Origin FOREIGN KEY (OriginAirportID) REFERENCES Airports(AirportID),
	CONSTRAINT FK_Flights_Destination FOREIGN KEY (DestinationAirportID) REFERENCES Airports(AirportID),
	CONSTRAINT FK_Flights_Airline FOREIGN KEY (AirlineID) REFERENCES Airlines(AirlineID),
	CONSTRAINT CHK_Flights_Status CHECK ([Status] IN ('Departing', 'Delayed', 'Arrived', 'Cancelled'))
)

CREATE TABLE Tickets(
	TicketID INT,
	Price DECIMAL(8,2) NOT NULL,
	Class VARCHAR(6) NOT NULL,
	Seat VARCHAR(5) NOT NULL,
	CustomerID INT,
	FlightID INT,
	CONSTRAINT PK_Tickets_ID PRIMARY KEY (TicketID),
	CONSTRAINT FK_Tickets_Customer FOREIGN KEY(CustomerID) REFERENCES Customers(CustomerID),
	CONSTRAINT FK_Tickets_Flights FOREIGN KEY(FlightID) REFERENCES Flights(FlightID),
	CONSTRAINT CHK_Tickets_Class CHECK (Class IN ('First', 'Second', 'Third'))
)
-------------------------------------2,1
INSERT INTO Flights(FlightID,DepartureTime,ArrivalTime,[Status],OriginAirportID,DestinationAirportID,AirlineID)
VALUES
(1,'2016-10-13 06:00 AM','2016-10-13 10:00 AM', 'Delayed',  	1,	4,	1),
(2,'2016-10-12 12:00 PM','2016-10-12 12:01 PM', 'Departing',	1,	3,	2),
(3,'2016-10-14 03:00 PM','2016-10-20 04:00 AM', 'Delayed',	    4,	2,	4),
(4,'2016-10-12 01:24 PM','2016-10-12 4:31 PM',  'Departing',	3,	1,	3),
(5,'2016-10-12 08:11 AM','2016-10-12 11:22 PM', 'Departing',	4,	1,	1),
(6,'1995-06-21 12:30 PM','1995-06-22 08:30 PM', 'Arrived',	    2,	3,	5),
(7,'2016-10-12 11:34 PM','2016-10-13 03:00 AM', 'Departing',	2,	4,	2),
(8,'2016-11-11 01:00 PM','2016-11-12 10:00 PM', 'Delayed',	    4,	3,	1),
(9,'2015-10-01 12:00 PM','2015-12-01 01:00 AM', 'Arrived',	    1,	2,	1),
(10,'2016-10-12 07:30 PM','2016-10-13 12:30 PM','Departing',2,1,7)

INSERT INTO Tickets(TicketID,Price,Class,Seat,CustomerID,FlightID)
VALUES
(1,	3000.00,	'First',	'233-A',	3,	8 ),
(2,	1799.90,	'Second',	'123-D',	1,	1 ),
(3,	1200.50,	'Second',	'12-Z',		2,	5 ),
(4,	410.68,		'Third', 	'45-Q',		2,	8 ),
(5,	560.00,		'Third',	'201-R',	4,	6 ),
(6,	2100.00,	'Second',	'13-T',		1,	9 ),
(7,	5500.00,	'First',	'98-O',		2,	7 )

-------------------------------------2,2
UPDATE Flights
SET AirlineID = 1
WHERE [Status] LIKE 'Arrived'

-------------------------------------2,3
UPDATE Tickets 
SET Price *=1.5
WHERE TicketID IN  (SELECT t.TicketID FROM  Tickets t
INNER JOIN Flights f
ON t.FlightID = f.FlightID
INNER JOIN Airlines a
ON f.AirlineID = a.AirlineID
AND a.Rating = (SELECT MAX(a.Rating) FROM Airlines a))


-------------------------------------2,4
CREATE TABLE CustomerReviews (
	ReviewID INT,
	ReviewContent VARCHAR(255) NOT NULL,
	ReviewGrade INT,
	AirlineID INT,
	CustomerID INT,
	CONSTRAINT PK_CustomerReviews_ID PRIMARY KEY (ReviewID),
	CONSTRAINT FK_CustomerReviews_Airline FOREIGN KEY (AirlineID) REFERENCES Airlines(AirlineID),
	CONSTRAINT FK_CustomerReviews_Customer FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
	CONSTRAINT CHK_CustomerReviews_ReviewGrade CHECK (ReviewGrade >=0 AND ReviewGrade <=10)	
)

CREATE TABLE CustomerBankAccounts (
	AccountID INT,
	AccountNumber VARCHAR(10) NOT NULL,
	Balance DECIMAL(10,2) NOT NULL,
	CustomerID INT,
	CONSTRAINT PK_CustomerBackAccounts PRIMARY KEY(AccountID),
	CONSTRAINT FK_CustomerBankAccounts FOREIGN KEY(CustomerID) REFERENCES Customers(CustomerID),
	CONSTRAINT UNQ_CustomerBankAccounts UNIQUE(AccountNumber)
)


-------------------------------------2,5

INSERT INTO CustomerReviews(ReviewID,ReviewContent,ReviewGrade,AirlineID,CustomerID)
VALUES
(1,	'Me is very happy. Me likey this airline. Me good.',	10,	1,	1),
(2,	'Ja, Ja, Ja... Ja, Gut, Gut, Ja Gut! Sehr Gut!',	10,	1,	4),
(3,	'Meh...',	5,	4,	3),
(4,	'Well I''ve seen better, but I''ve certainly seen a lot worse...',	7,	3,	5)

INSERT INTO CustomerBankAccounts(AccountID,AccountNumber,Balance,CustomerID)
VALUES
(1,	'123456790',	2569.23,	1),
(2,	'18ABC23672',	14004568.23,	2),
(3,	'F0RG0100N3',	19345.20,	5)


-------------------------------------3,1

SELECT t.TicketID, t.Price,t.Class, t.Seat FROM Tickets t
ORDER BY t.TicketID

-------------------------------------3,2

SELECT c.CustomerID, CONCAT(c.FirstName, CONCAT(' ', c.LastName)) AS 'Full Name', c.Gender FROM Customers c
ORDER BY [Full Name] ASC, c.CustomerID ASC


-------------------------------------3,3

SELECT f.FlightID, f.DepartureTime, f.ArrivalTime FROM Flights f
WHERE f.[Status] LIKE 'Delayed'


-------------------------------------3,4

SELECT TOP 5 
a.AirlineID,
a.AirlineName,
a.Nationality,
a.Rating 
FROM Airlines a
ORDER BY a.Rating DESC, a.AirlineID ASC

-------------------------------------3,5

SELECT t.TicketID,a.AirportName AS [Destination], CONCAT(c.FirstName,CONCAT(' ',c.LastName)) AS [CustomerName] 
FROM Tickets t
INNER JOIN Flights f
ON t.FlightID = f.FlightID
INNER JOIN Customers c
ON t.CustomerID = c.CustomerID
INNER JOIN Airports a
ON f.DestinationAirportID = a.AirportID
WHERE t.Price<5000 AND t.Class LIKE 'First'
ORDER BY t.TicketID ASC


-------------------------------------3,6

SELECT c.CustomerID,  CONCAT(c.FirstName,CONCAT(' ',c.LastName)) AS [FullName],t.TownName FROM Customers c
INNER JOIN Tickets ti
ON c.CustomerID = ti.CustomerID
INNER JOIN Flights f
ON ti.FlightID = f.FlightID AND f.[Status] LIKE 'Departing'
INNER JOIN Airports a
ON f.OriginAirportID = a.AirportID AND a.TownID = c.HomeTownID
INNER JOIN Towns t
ON c.HomeTownID = t.TownID
ORDER BY c.CustomerID ASC


-------------------------------------3,7

SELECT c.CustomerID,
CONCAT(c.FirstName,CONCAT(' ',c.LastName)) AS [FullName],
2016-YEAR(c.DateOfBirth) AS Age
FROM Customers c
INNER JOIN Tickets t
ON c.CustomerID = t.CustomerID
INNER JOIN Flights f
ON t.TicketID = f.FlightID AND f.[Status] LIKE 'Departing'
ORDER BY Age ASC,c.CustomerID ASC

--OR

SELECT DISTINCT
	c.CustomerID,
	CONCAT(FirstName, ' ', LastName) AS CustomerName,
	2016-YEAR(c.DateOfBirth) AS Age
FROM 
	Customers as c
	INNER JOIN Tickets as t
	on c.CustomerID = t.CustomerID
	inner join Flights as f
	on t.FlightID = f.FlightID
WHERE t.CustomerID is not null
		AND f.Status LIKE 'Departing'

-------------------------------------3,8

SELECT TOP 3 
c.CustomerID, 
CONCAT(c.FirstName,CONCAT(' ',c.LastName)) AS [FullName],
t.Price,
a.AirportName
FROM Customers c
INNER JOIN Tickets t
ON c.CustomerID = t.CustomerID
INNER JOIN Flights f
ON t.FlightID = f.FlightID AND f.[Status] LIKE 'Delayed'
INNER JOIN Airports a
ON f.DestinationAirportID = a.AirportID
ORDER BY t.Price DESC,c.CustomerID ASC


-------------------------------------3,9


SELECT
f.FlightID, 
f.DepartureTime,
f.ArrivalTime,
(SELECT a.AirportName FROM Airports a WHERE a.AirportID = f.OriginAirportID) AS [Origin],
(SELECT a.AirportName FROM Airports a WHERE a.AirportID = f.DestinationAirportID) AS [Destination]
FROM Flights f
WHERE f.[Status] LIKE 'Departing'
ORDER BY f.DepartureTime ASC, f.FlightID ASC


-------------------------------------3,10

SELECT c.CustomerID,
CONCAT(c.FirstName,CONCAT(' ',c.LastName)) AS [FullName],
DATEDIFF(YEAR,c.DateOfBirth, GETDATE()) AS [Age]
FROM Customers c
INNER JOIN Tickets t
ON c.CustomerID = t.CustomerID
INNER JOIN Flights f
ON t.FlightID = f.FlightID AND f.[Status] LIKE 'Arrived'
WHERE DATEDIFF(YEAR,c.DateOfBirth, GETDATE()) < 21
ORDER BY [Age] DESC, c.CustomerID ASC
 
-------------------------------------3,11
WITH subquery AS
(SELECT a.AirportID,
 a.AirportName,
 (SELECT COUNT(1) AS 'Count' FROM Customers c
 INNER JOIN Tickets t
 ON c.CustomerID = t.CustomerID AND t.FlightID = f.FlightID) AS 'Passengers'
 FROM Airports a
 INNER JOIN Flights f
 ON a.AirportID = f.OriginAirportID AND f.[Status] LIKE 'Departing')

SELECT * FROM subquery s WHERE s.[Passengers] > 0
ORDER BY s.AirportID ASC
 
  
-------------------------------------4,1

CREATE PROCEDURE usp_SubmitReview (@CustomerID INT,@ReviewContent VARCHAR(MAX),@ReviewGrade INT, @AirlineName VARCHAR(MAX))
AS
BEGIN
	DECLARE @AirlineId INT = (  SELECT TOP 1 a.AirlineID FROM Airlines a WHERE a.AirlineName LIKE @AirlineName )
	DECLARE @id INT = ( SELECT TOP 1 cr.ReviewID FROM CustomerReviews cr ORDER BY cr.ReviewID DESC ) + 1
	IF(@AirlineId IS NULL)
	BEGIN 
	RAISERROR ('Airline does not exist.',16,1);  
	RETURN
	END
	INSERT INTO CustomerReviews (ReviewID,ReviewContent,ReviewGrade,AirlineID,CustomerID)
	VALUES (@id, @ReviewContent, @ReviewGrade, @AirlineId, @CustomerID)	
	
END



-------------------------------------4,2

CREATE PROCEDURE usp_PurchaseTicket (@CustomerID INT,@FlightID INT, @TicketPrice MONEY, @Class VARCHAR(MAX),@Seat VARCHAR(MAX))
AS
BEGIN
	DECLARE @Balance MONEY = (SELECT cba.Balance FROM CustomerBankAccounts cba WHERE cba.CustomerID = @CustomerID)
	
	IF((SELECT cba.Balance FROM CustomerBankAccounts cba WHERE cba.CustomerID = @CustomerID)>@TicketPrice)
	BEGIN	
	DECLARE @id INT =( SELECT TOP 1 t.TicketID FROM Tickets t ORDER BY t.TicketID DESC ) + 1

	INSERT INTO Tickets (TicketID, CustomerID, FlightID, Price, Class, Seat)
	VALUES (@id, @CustomerID,@FlightID,@TicketPrice,@Class,@Seat)

	UPDATE CustomerBankAccounts 
	SET Balance = Balance - @TicketPrice
	WHERE CustomerID = @CustomerID

	END

	ELSE
	BEGIN	
	RAISERROR ('Insufficient bank account balance for ticket purchase.', 16, 1) 
	END 
END


-------------------------------------BONUS; 

--!!!!
--
--ASSUMING 
--ArrivedFlights.FlightID IS THE REAL FLIGHTID
--ArrivedFlights.Origin = Airport.Name AND 
--ArrivedFlights.Destination = Airport.Name
--
--!!!!


CREATE TABLE ArrivedFlights(
	FlightID INT,
	ArrivalTime DATETIME NOT NULL,
	Origin VARCHAR(50) NOT NULL,
	Destination VARCHAR(50) NOT NULL,
	Passangers INT NOT NULL
	CONSTRAINT PK_ArrivedFlights_ID PRIMARY KEY(FlightID)
)


CREATE TRIGGER Logger
ON Flights
AFTER UPDATE
AS
BEGIN
	DECLARE @originAirportName VARCHAR(MAX) = (SELECT TOP 1 a.AirportName FROM Airports a WHERE a.AirportID = (SELECT TOP 1 i.OriginAirportID FROM inserted i))
	DECLARE @destinationAirportName VARCHAR(MAX) = (SELECT TOP 1 a.AirportName FROM Airports a WHERE a.AirportID = (SELECT TOP 1 i.DestinationAirportID FROM inserted i))
	INSERT INTO ArrivedFlights(FlightID, ArrivalTime, Origin,Destination,Passangers)
	SELECT 
	i.FlightID,
	i.ArrivalTime,
	(SELECT TOP 1 a.AirportName FROM Airports a WHERE a.AirportID = (SELECT TOP 1 ii.OriginAirportID FROM inserted ii WHERE ii.FlightID = i.FlightID)) AS [Origin], 
	(SELECT TOP 1 a.AirportName FROM Airports a WHERE a.AirportID = (SELECT TOP 1 ii.DestinationAirportID FROM inserted ii WHERE ii.FlightID = i.FlightID)) AS [Destination],
	(SELECT COUNT(1) AS Passengers FROM Customers c INNER JOIN Tickets t ON c.CustomerID = t.CustomerID INNER JOIN Flights f ON t.FlightID = f.FlightID) AS [Passangers]
	FROM inserted i 
	
END
